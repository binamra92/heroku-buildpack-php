trigger:
  branches:
    include:
      - '**'  # Change this to the branch you want to trigger the pipeline

pool:
  vmImage: 'ubuntu-latest'
  name: 'Default'

variables:
  SNYK_TOKEN: '5f0577a3-2f8b-475f-a1ff-e2689c59290c'  # Define this variable in your pipeline settings
  SNYK_ORG: 'University of Sydney'      # Define this variable in your pipeline settings

steps:
  - checkout: self
    displayName: 'Checkout code'

  - script: |
      echo "##[group]Install Snyk CLI"
      npm install -g snyk@latest  # Ensure you have the latest version
      echo "##[endgroup]"
    displayName: 'Install Snyk CLI'

  - script: |
      echo "##[group]Configure Snyk Endpoint"
      snyk config set endpoint=https://app.au.snyk.io/api
      snyk config get endpoint  # Check that the endpoint is set correctly
      echo "##[endgroup]"
    displayName: 'Configure Snyk Endpoint'
    env:
      SNYK_TOKEN: $(SNYK_TOKEN)
      SNYK_ORG: $(SNYK_ORG)

  - script: |
      echo "##[group]Configure Snyk Organization"
      snyk config set org=$(SNYK_ORG)
      snyk config get org  # Verify that the org is set correctly
      echo "##[endgroup]"
    displayName: 'Configure Snyk Organization'
    env:
      SNYK_TOKEN: $(SNYK_TOKEN)
      SNYK_ORG: $(SNYK_ORG)

  - script: |
      echo "##[group]Run Snyk to check for vulnerabilities"
      for i in {1..3}; do snyk test && break || sleep 10; done  # Retry up to 3 times
      echo "##[endgroup]"
    displayName: 'Run Snyk Test'
    env:
      SNYK_TOKEN: $(SNYK_TOKEN)
      SNYK_ORG: $(SNYK_ORG)
    continueOnError: true  # Ensures the pipeline continues even if vulnerabilities are found

  - script: |
      echo "##[group]Monitor project and report results to Snyk GUI"
      for i in {1..3}; do snyk monitor --project-name="Azure Pipeline" && break || sleep 10; done  # Retry up to 3 times
      echo "##[endgroup]"
    displayName: 'Monitor Project with Snyk'
    env:
      SNYK_TOKEN: $(SNYK_TOKEN)
      SNYK_ORG: $(SNYK_ORG)
    timeoutInMinutes: 30  # Increase the timeout limit
